/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torchaudio/functional/functional.py:576: UserWarning: At least one mel filterbank has all zero values. The value for `n_mels` (64) may be set too high. Or, the value for `n_freqs` (17) may be set too low.
  warnings.warn(
/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torchaudio/functional/functional.py:576: UserWarning: At least one mel filterbank has all zero values. The value for `n_mels` (64) may be set too high. Or, the value for `n_freqs` (33) may be set too low.
  warnings.warn(
/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torchaudio/functional/functional.py:576: UserWarning: At least one mel filterbank has all zero values. The value for `n_mels` (64) may be set too high. Or, the value for `n_freqs` (65) may be set too low.
  warnings.warn(
/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torchaudio/functional/functional.py:576: UserWarning: At least one mel filterbank has all zero values. The value for `n_mels` (64) may be set too high. Or, the value for `n_freqs` (129) may be set too low.
  warnings.warn(
[Step]: 200 | [Train losses]: {'l_g': tensor(1.4551), 'l_d': tensor(0.4189), 'l_t': tensor(0.2025), 'l_f': tensor(5.2982e-06), 'l_w': tensor(82.7786), 'l_feat': tensor(0.4252)}
[Step]: 200 | [Valid losses]: {'val_l_t': tensor(0.2458), 'sdr_tt': tensor(6.6128)}
[Step]: 400 | [Train losses]: {'l_g': tensor(1.4865), 'l_d': tensor(0.4127), 'l_t': tensor(0.3076), 'l_f': tensor(1.3916e-05), 'l_w': tensor(104.8153), 'l_feat': tensor(0.5427)}
[Step]: 400 | [Valid losses]: {'val_l_t': tensor(0.2404), 'sdr_tt': tensor(6.7587)}
[Step]: 600 | [Train losses]: {'l_g': tensor(1.5278), 'l_d': tensor(0.3785), 'l_t': tensor(0.2442), 'l_f': tensor(9.9128e-06), 'l_w': tensor(101.1807), 'l_feat': tensor(0.4683)}
[Step]: 600 | [Valid losses]: {'val_l_t': tensor(0.2409), 'sdr_tt': tensor(6.8033)}
[Step]: 800 | [Train losses]: {'l_g': tensor(1.4739), 'l_d': tensor(0.3968), 'l_t': tensor(0.2312), 'l_f': tensor(8.1423e-06), 'l_w': tensor(97.6775), 'l_feat': tensor(0.4677)}
[Step]: 800 | [Valid losses]: {'val_l_t': tensor(0.2421), 'sdr_tt': tensor(6.7179)}
[Step]: 1000 | [Train losses]: {'l_g': tensor(1.4287), 'l_d': tensor(0.3627), 'l_t': tensor(0.2187), 'l_f': tensor(6.0677e-06), 'l_w': tensor(84.9002), 'l_feat': tensor(0.4562)}
[Step]: 1000 | [Valid losses]: {'val_l_t': tensor(0.2347), 'sdr_tt': tensor(6.7870)}
[Step]: 1200 | [Train losses]: {'l_g': tensor(1.4254), 'l_d': tensor(0.3800), 'l_t': tensor(0.2933), 'l_f': tensor(1.3879e-05), 'l_w': tensor(101.3780), 'l_feat': tensor(0.5446)}
[Step]: 1200 | [Valid losses]: {'val_l_t': tensor(0.2378), 'sdr_tt': tensor(6.7809)}
[Step]: 1400 | [Train losses]: {'l_g': tensor(1.5301), 'l_d': tensor(0.3825), 'l_t': tensor(0.2398), 'l_f': tensor(7.6176e-06), 'l_w': tensor(98.5238), 'l_feat': tensor(0.4768)}
[Step]: 1400 | [Valid losses]: {'val_l_t': tensor(0.2435), 'sdr_tt': tensor(6.6395)}
[Step]: 1600 | [Train losses]: {'l_g': tensor(1.5003), 'l_d': tensor(0.3903), 'l_t': tensor(0.2450), 'l_f': tensor(9.2259e-06), 'l_w': tensor(87.2953), 'l_feat': tensor(0.4691)}
[Step]: 1600 | [Valid losses]: {'val_l_t': tensor(0.2365), 'sdr_tt': tensor(6.9056)}
[Step]: 1800 | [Train losses]: {'l_g': tensor(1.4464), 'l_d': tensor(0.3987), 'l_t': tensor(0.2426), 'l_f': tensor(8.5352e-06), 'l_w': tensor(102.2851), 'l_feat': tensor(0.4773)}
[Step]: 1800 | [Valid losses]: {'val_l_t': tensor(0.2350), 'sdr_tt': tensor(6.7464)}
[Step]: 2000 | [Train losses]: {'l_g': tensor(1.4455), 'l_d': tensor(0.3596), 'l_t': tensor(0.2418), 'l_f': tensor(8.6291e-06), 'l_w': tensor(93.8959), 'l_feat': tensor(0.4766)}
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/anakuzne/projects/encodec_hy/encodec/code/encodec/dist_train.py", line 515, in <module>
    val_losses = valid(model, valid_loader, inp_args.bandwidth, gpu_rank, inp_args.use_se_loss, inp_args.debug)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/anakuzne/projects/encodec_hy/encodec/code/encodec/dist_train.py", line 278, in valid
    for idx, batch in enumerate(valid_loader):
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 634, in __next__
    data = self._next_data()
           ^^^^^^^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torch/utils/data/dataloader.py", line 678, in _next_data
    data = self._dataset_fetcher.fetch(index)  # may raise StopIteration
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torch/utils/data/_utils/fetch.py", line 54, in fetch
    return self.collate_fn(data)
           ^^^^^^^^^^^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 264, in default_collate
    return collate(batch, collate_fn_map=default_collate_fn_map)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 142, in collate
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 142, in <listcomp>
    return [collate(samples, collate_fn_map=collate_fn_map) for samples in transposed]  # Backwards compatibility.
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 119, in collate
    return collate_fn_map[elem_type](batch, collate_fn_map=collate_fn_map)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 171, in collate_numpy_array_fn
    return collate([torch.as_tensor(b) for b in batch], collate_fn_map=collate_fn_map)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 119, in collate
    return collate_fn_map[elem_type](batch, collate_fn_map=collate_fn_map)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torch/utils/data/_utils/collate.py", line 162, in collate_tensor_fn
    return torch.stack(batch, 0, out=out)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt