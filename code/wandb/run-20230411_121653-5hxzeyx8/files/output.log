/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torchaudio/functional/functional.py:576: UserWarning: At least one mel filterbank has all zero values. The value for `n_mels` (64) may be set too high. Or, the value for `n_freqs` (17) may be set too low.
  warnings.warn(
/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torchaudio/functional/functional.py:576: UserWarning: At least one mel filterbank has all zero values. The value for `n_mels` (64) may be set too high. Or, the value for `n_freqs` (33) may be set too low.
  warnings.warn(
/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torchaudio/functional/functional.py:576: UserWarning: At least one mel filterbank has all zero values. The value for `n_mels` (64) may be set too high. Or, the value for `n_freqs` (65) may be set too low.
  warnings.warn(
/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torchaudio/functional/functional.py:576: UserWarning: At least one mel filterbank has all zero values. The value for `n_mels` (64) may be set too high. Or, the value for `n_freqs` (129) may be set too low.
  warnings.warn(
[Step]: 200 | [Train losses]: {'l_g': tensor(1.4747), 'l_d': tensor(0.4242), 'l_t': tensor(0.3882), 'l_f': tensor(4.9598e-05), 'l_w': tensor(82.2495), 'l_feat': tensor(0.7575)}
[Step]: 200 | [Valid losses]: {'val_l_t': tensor(0.3818), 'sdr_tt': tensor(4.1294)}
[Step]: 400 | [Train losses]: {'l_g': tensor(1.5418), 'l_d': tensor(0.3843), 'l_t': tensor(0.4106), 'l_f': tensor(7.9973e-05), 'l_w': tensor(55.9216), 'l_feat': tensor(0.7719)}
[Step]: 400 | [Valid losses]: {'val_l_t': tensor(0.3817), 'sdr_tt': tensor(4.1271)}
[Step]: 600 | [Train losses]: {'l_g': tensor(1.6143), 'l_d': tensor(0.3658), 'l_t': tensor(0.3667), 'l_f': tensor(4.6162e-05), 'l_w': tensor(49.7314), 'l_feat': tensor(0.6937)}
[Step]: 600 | [Valid losses]: {'val_l_t': tensor(0.3428), 'sdr_tt': tensor(4.8686)}
[Step]: 800 | [Train losses]: {'l_g': tensor(1.5451), 'l_d': tensor(0.3815), 'l_t': tensor(0.3425), 'l_f': tensor(3.8871e-05), 'l_w': tensor(41.2974), 'l_feat': tensor(0.6825)}
[Step]: 800 | [Valid losses]: {'val_l_t': tensor(0.3440), 'sdr_tt': tensor(4.5661)}
[Step]: 1000 | [Train losses]: {'l_g': tensor(1.5356), 'l_d': tensor(0.3484), 'l_t': tensor(0.3203), 'l_f': tensor(2.9643e-05), 'l_w': tensor(35.4319), 'l_feat': tensor(0.6442)}
[Step]: 1000 | [Valid losses]: {'val_l_t': tensor(0.3553), 'sdr_tt': tensor(4.5209)}
[Step]: 1200 | [Train losses]: {'l_g': tensor(1.4647), 'l_d': tensor(0.3711), 'l_t': tensor(0.3844), 'l_f': tensor(5.7502e-05), 'l_w': tensor(35.6293), 'l_feat': tensor(0.7424)}
[Step]: 1200 | [Valid losses]: {'val_l_t': tensor(0.3474), 'sdr_tt': tensor(4.6778)}
[Step]: 1400 | [Train losses]: {'l_g': tensor(1.5346), 'l_d': tensor(0.3693), 'l_t': tensor(0.3331), 'l_f': tensor(2.8757e-05), 'l_w': tensor(32.5474), 'l_feat': tensor(0.6614)}
[Step]: 1400 | [Valid losses]: {'val_l_t': tensor(0.3484), 'sdr_tt': tensor(4.5135)}
[Step]: 1600 | [Train losses]: {'l_g': tensor(1.4801), 'l_d': tensor(0.3834), 'l_t': tensor(0.3852), 'l_f': tensor(4.0676e-05), 'l_w': tensor(31.4718), 'l_feat': tensor(0.6786)}
[Step]: 1600 | [Valid losses]: {'val_l_t': tensor(0.3268), 'sdr_tt': tensor(5.0112)}
[Step]: 1800 | [Train losses]: {'l_g': tensor(1.4535), 'l_d': tensor(0.3835), 'l_t': tensor(0.3377), 'l_f': tensor(3.3419e-05), 'l_w': tensor(30.8224), 'l_feat': tensor(0.6581)}
[Step]: 1800 | [Valid losses]: {'val_l_t': tensor(0.3299), 'sdr_tt': tensor(4.8190)}
[Step]: 2000 | [Train losses]: {'l_g': tensor(1.4162), 'l_d': tensor(0.3491), 'l_t': tensor(0.3359), 'l_f': tensor(3.5347e-05), 'l_w': tensor(29.8015), 'l_feat': tensor(0.6502)}
[Step]: 2000 | [Valid losses]: {'val_l_t': tensor(0.3205), 'sdr_tt': tensor(5.2110)}
[Step]: 2200 | [Train losses]: {'l_g': tensor(1.4561), 'l_d': tensor(0.4161), 'l_t': tensor(0.4565), 'l_f': tensor(4.2297e-05), 'l_w': tensor(33.7090), 'l_feat': tensor(0.6900)}
[Step]: 2200 | [Valid losses]: {'val_l_t': tensor(0.3424), 'sdr_tt': tensor(4.5007)}
[Step]: 2400 | [Train losses]: {'l_g': tensor(1.4501), 'l_d': tensor(0.3459), 'l_t': tensor(0.3319), 'l_f': tensor(3.0663e-05), 'l_w': tensor(28.2947), 'l_feat': tensor(0.6381)}
[Step]: 2400 | [Valid losses]: {'val_l_t': tensor(0.3317), 'sdr_tt': tensor(4.9649)}
[Step]: 2600 | [Train losses]: {'l_g': tensor(1.5148), 'l_d': tensor(0.3360), 'l_t': tensor(0.3246), 'l_f': tensor(2.8995e-05), 'l_w': tensor(27.3315), 'l_feat': tensor(0.6353)}
[Step]: 2600 | [Valid losses]: {'val_l_t': tensor(0.3241), 'sdr_tt': tensor(5.0505)}
[Step]: 2800 | [Train losses]: {'l_g': tensor(1.4834), 'l_d': tensor(0.3322), 'l_t': tensor(0.3386), 'l_f': tensor(3.4250e-05), 'l_w': tensor(26.4705), 'l_feat': tensor(0.6480)}
[Step]: 2800 | [Valid losses]: {'val_l_t': tensor(0.3261), 'sdr_tt': tensor(5.2657)}
[Step]: 3000 | [Train losses]: {'l_g': tensor(1.5304), 'l_d': tensor(0.3320), 'l_t': tensor(0.3346), 'l_f': tensor(2.6827e-05), 'l_w': tensor(27.6918), 'l_feat': tensor(0.6334)}
[Step]: 3000 | [Valid losses]: {'val_l_t': tensor(0.3300), 'sdr_tt': tensor(4.8943)}
[Step]: 3200 | [Train losses]: {'l_g': tensor(1.5005), 'l_d': tensor(0.3390), 'l_t': tensor(0.3458), 'l_f': tensor(3.7105e-05), 'l_w': tensor(27.3580), 'l_feat': tensor(0.6550)}
[Step]: 3200 | [Valid losses]: {'val_l_t': tensor(0.3231), 'sdr_tt': tensor(5.1064)}
[Step]: 3400 | [Train losses]: {'l_g': tensor(1.4922), 'l_d': tensor(0.3349), 'l_t': tensor(0.2791), 'l_f': tensor(2.1913e-05), 'l_w': tensor(25.5754), 'l_feat': tensor(0.5927)}
[Step]: 3400 | [Valid losses]: {'val_l_t': tensor(0.3052), 'sdr_tt': tensor(5.3291)}
[Step]: 3600 | [Train losses]: {'l_g': tensor(1.5277), 'l_d': tensor(0.3245), 'l_t': tensor(0.3456), 'l_f': tensor(3.5058e-05), 'l_w': tensor(25.4056), 'l_feat': tensor(0.6667)}
[Step]: 3600 | [Valid losses]: {'val_l_t': tensor(0.3130), 'sdr_tt': tensor(5.3707)}
[Step]: 3800 | [Train losses]: {'l_g': tensor(1.5236), 'l_d': tensor(0.3637), 'l_t': tensor(0.3758), 'l_f': tensor(2.7543e-05), 'l_w': tensor(26.4433), 'l_feat': tensor(0.6655)}
[Step]: 3800 | [Valid losses]: {'val_l_t': tensor(0.3238), 'sdr_tt': tensor(5.1175)}
[Step]: 4000 | [Train losses]: {'l_g': tensor(1.5085), 'l_d': tensor(0.3344), 'l_t': tensor(0.3374), 'l_f': tensor(2.9943e-05), 'l_w': tensor(25.1894), 'l_feat': tensor(0.6533)}
[Step]: 4000 | [Valid losses]: {'val_l_t': tensor(0.3264), 'sdr_tt': tensor(4.9374)}
[Step]: 4200 | [Train losses]: {'l_g': tensor(1.5521), 'l_d': tensor(0.3468), 'l_t': tensor(0.5521), 'l_f': tensor(3.1659e-05), 'l_w': tensor(35.4163), 'l_feat': tensor(0.6314)}
[Step]: 4200 | [Valid losses]: {'val_l_t': tensor(0.3171), 'sdr_tt': tensor(5.1755)}
[Step]: 4400 | [Train losses]: {'l_g': tensor(1.5362), 'l_d': tensor(0.3236), 'l_t': tensor(0.3539), 'l_f': tensor(3.4643e-05), 'l_w': tensor(26.1620), 'l_feat': tensor(0.6604)}
[Step]: 4400 | [Valid losses]: {'val_l_t': tensor(0.3241), 'sdr_tt': tensor(4.7562)}
[Step]: 4600 | [Train losses]: {'l_g': tensor(1.5144), 'l_d': tensor(0.3207), 'l_t': tensor(0.2996), 'l_f': tensor(2.3881e-05), 'l_w': tensor(24.4891), 'l_feat': tensor(0.6170)}
[Step]: 4600 | [Valid losses]: {'val_l_t': tensor(0.3166), 'sdr_tt': tensor(5.1164)}
[Step]: 4800 | [Train losses]: {'l_g': tensor(1.5560), 'l_d': tensor(0.3268), 'l_t': tensor(0.3392), 'l_f': tensor(2.8959e-05), 'l_w': tensor(24.8551), 'l_feat': tensor(0.6399)}
[Step]: 4800 | [Valid losses]: {'val_l_t': tensor(0.3399), 'sdr_tt': tensor(4.5266)}
[Step]: 5000 | [Train losses]: {'l_g': tensor(1.5305), 'l_d': tensor(0.3221), 'l_t': tensor(0.2893), 'l_f': tensor(2.4320e-05), 'l_w': tensor(23.3501), 'l_feat': tensor(0.6087)}
[Step]: 5000 | [Valid losses]: {'val_l_t': tensor(0.3110), 'sdr_tt': tensor(5.1379)}
[Step]: 5200 | [Train losses]: {'l_g': tensor(1.5548), 'l_d': tensor(0.3303), 'l_t': tensor(0.2892), 'l_f': tensor(2.2693e-05), 'l_w': tensor(23.5646), 'l_feat': tensor(0.5998)}
[Step]: 5200 | [Valid losses]: {'val_l_t': tensor(0.3049), 'sdr_tt': tensor(5.2778)}
[Step]: 5400 | [Train losses]: {'l_g': tensor(1.5269), 'l_d': tensor(0.3235), 'l_t': tensor(0.3227), 'l_f': tensor(3.4316e-05), 'l_w': tensor(24.0748), 'l_feat': tensor(0.6358)}
[Step]: 5400 | [Valid losses]: {'val_l_t': tensor(0.3074), 'sdr_tt': tensor(5.3625)}
Traceback (most recent call last):
  File "<frozen runpy>", line 198, in _run_module_as_main
  File "<frozen runpy>", line 88, in _run_code
  File "/home/anakuzne/projects/encodec_hy/encodec/code/encodec/dist_train.py", line 443, in <module>
    l_f = melspec_loss(s, s_hat, gpu_rank, range(5,12))
          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/anakuzne/projects/encodec_hy/encodec/code/encodec/dist_train.py", line 119, in melspec_loss
    mel_s = mel_transform(s)
            ^^^^^^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torchaudio/transforms/_transforms.py", line 650, in forward
    specgram = self.spectrogram(waveform)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torch/nn/modules/module.py", line 1501, in _call_impl
    return forward_call(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torchaudio/transforms/_transforms.py", line 110, in forward
    return F.spectrogram(
           ^^^^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torchaudio/functional/functional.py", line 126, in spectrogram
    spec_f = torch.stft(
             ^^^^^^^^^^^
  File "/home/anakuzne/miniconda3/envs/encodec/lib/python3.11/site-packages/torch/functional.py", line 641, in stft
    return _VF.stft(input, n_fft, hop_length, win_length, window,  # type: ignore[attr-defined]
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt